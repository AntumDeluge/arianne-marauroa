Title  : Delta perception algorithm
Info   : Introduction to the way perceptions are sent from server to client.
Keyword: Percetions, delta, modified, deleted.
Author : Miguel Angel Blanch Lardin
Created: 2003/11/23
status : planning

The main idea behind the DPA is not to sent ALL the objects to client, but
only those that has been modified.

Imagine that we have 1000 objects, and only O1 and O505 are active objects that
are modified each turn. ok?

Traditional method:
	- Get objects that our player should see ( 1000 objects )
	- Send them to player ( 1000 objects )
	- Next turn 
	- Get objects that our player should see ( 1000 objects )
	- Send them to player
	- Next turn 
	...
	
I hope you see the problem..., we are sending again objects that never changed.

The delta perception algorithm:
	- Get objects that our player should see ( 1000 objects )
	- Reduce the list to the modified ones ( 1000 objects )
	- Store also the objects that are not longer visible ( 0 objects )
	- Send them to player ( 1000 objects )
	- Next turn 
	- Get objects that our player should see ( 1000 objects )
	- Reduce the list to the modified ones ( 2 objects )
	- Store also the objects that are not longer visible ( 0 objects )
	- Send them to player ( 2 objects )
	- Next turn 
	...

An area really related to DPA is RPZone

In order to get the Delta perception algorithm to work correctly you have to
play with several parameters:
- RP Turn Duration
- Relation between TOTAL perception and DELTA perception
- Know your game :)

Well, as you should know, MPEG adds a full frame each X number of frames, so 
it can be used as synchronization in case the file get corrupted. The idea is
that if you fail to continue decompressing data, you can always omit things until 
the next full frame and then when you synced.
The idea here is the same, we send a perception on each turn and every X turns 
we send a full perception so that clients can synchronize, as UDP is not a secure
transport and you can also have new clients joining.

So the point is to adjust turn duration and relation so that the maximum time a 
client is out of sync is around 20-30 seconds. Of course, depending of the type 
of game you may lower or increase this value.

To make perception works it is important to call the modify method on RPZone so
this way objects modified are stored in the modified list. If you skip this part
the perception system will only work in Total mode.