Title  : Objects Explained
Info   : Deep overview of objects, its types and its usage.
Keyword: Objects, classes, types, XML, attributes.
Author : Miguel Angel Blanch Lardin
Created: 2004/04/27
status : planning


Objects are the basic Marauroa data structure, and you should already be
familiarized with it because you read Actions and Object document.

Marauroa engine only enforce that objects has two attributes:
- id
- type

id is an unique identification for the Object and type is the type of the object
aka class, so that you can share attributes for all the instances of the class.

Also engine give special treatment to two types of attributes:
- Attributes that begin with ! are completly hidden for all the users but the 
  owner of the object.
- Attributes that begin with # are completly hidden for all the users.
  

NOTE: This documents related to an early specification of Gladiators and is no 
longer relevant as it refers to specification, but can help you to know how to 
make the basic steps to define a game.

So let's point the multiple objects that we are going to have in Marauroa 
and their attributes and slots.
Most object share a few attributes. They are:
- object_id				
- object_type		
- object_look		
- object_position

The object_id attribute define the unique identifier of the object in the world.
The object_type define the type of object it is, for example: human.
The object_look would point to the model used to represent this object.
The object_position determine where the object is in the world using a X,Y basis
Again, we could add the Z value, but it is totally fake, we calculate Z for 
adjusting character to terrain.


Object Avatar
The avatar is the entity in Marauroa that represent our character and it is the
way of handling everything in that world.
This object must have also the next set of attributes:
- object_name

Also add too the RP attributes that are still to be defined.
The object_name is just the name of the character this object is representing.
The object has the next slots:
- left_hand
- right_hand
- backpack


Object Stone
A stone is just a little rock used for testing get, release and exchange actions.


Object Torch
A torch is a small piece of wood in form of stick that is used to light on the 
near area.
This object must have the next set of attributes:
- object_status

The object_status define if the torch is ON or OFF.


Object Chest
A wooden box with a lock that can be open or closed and can contain items inside.
This object must have the next set of attributes:
- object_status
- object_forkey

The object_status define if the chest is OPEN or CLOSED.
The object_forkey define the identifier of the key that opens this lock.
The object has the next slots:
- container


Object Key
A small piece of metal that is placed inside the lock to unlock it.
This object must have the next set of attributes:
- object_key

The object_key define the identifier of the key.
