Title  : PlayerContainer Explained
Info   : Description of the dplayer container and its utility.
Keyword: Database, player container, players, structure
Author : Miguel Angel Blanch Lardin
Created: 2003/10/23
status : planning

PlayerContainer is the data structure that contains all the needed info from
players to keep the game running.

It consists of a list of RuntimePlayerEntry objects, and it is heavily linked
with PlayerDatabase, so we hide the complexity to GameManager.
By making PlayerDatabase to be hide by PlayerContainer we achieve the illusion
that managing the runtime behaviour we modify automagically the permanent one.

RuntimePlayerEntry is the structure that contains the information of the player
while it is online. RuntimePlayerEntry contains:
- clientid
- source
- timestamp
- username
- choosenCharacter
- state

Let's see what each field is for. 
Clientid is the field in charge of indexing players in server, see the document
about clientid generation to understand what they are and how they are generated.

Source is the IPv4 address of the client, so that we can determine if message is
really coming from client or another person trying to impersonate it.

Timestamp is used to determine if a client has timeout and as such, it is only 
wasting resources on the server. As you know UDP is not a delivery-guaranted 
protocol, so we need to check ourselves for dead clients. Take care that it only
indicates that the player timedout, it doesn't apply any kind of measures over them

Username and choosenCharacter are filled in runtime in Login and ChooseCharacter
events respectively so that we are able to use the database from PlayerContainer,
this way knowing the clientid we can know also the username and the choosenCharacter.

State is a number expresing the state in which the player is. There are four states:
- Have to login
- Login Complete
- Game begin
- Logout

When we create the entry it is by default have to login. Once you have logged in 
correctly, we change state to Login Complete, and once you have choose a Character
we change it to game begin. The logout state is trivial :)

The main idea is that some operations are only allowed in one state, so we can 
control it more easy with the state propierty.

As you can see all we need to operate PlayerDatabase is username and 
choosenCharacter. So using PlayerEntryContainer we can fully operate it.
